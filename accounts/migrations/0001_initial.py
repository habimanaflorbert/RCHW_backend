# Generated by Django 3.2 on 2023-09-05 13:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(blank=True, max_length=255, null=True, unique=True, verbose_name='email address')),
                ('full_name', models.CharField(max_length=100, verbose_name='full name')),
                ('username', models.CharField(max_length=100, unique=True, verbose_name='username')),
                ('phone_number', models.CharField(max_length=255, unique=True, verbose_name='phone number')),
                ('identification_number', models.CharField(max_length=255, verbose_name='identification_number')),
                ('user_type', models.CharField(choices=[('ADMIN', 'Super User'), ('STAFF', 'Staff User'), ('UMUJYANAMA', 'Umujyana'), ('HC', 'Health Center')], default='UMUJYANAMA', max_length=50, verbose_name='user type')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff')),
                ('is_first_login', models.BooleanField(default=True, verbose_name='staff')),
                ('admin', models.BooleanField(default=False, verbose_name='admin')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='created on')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'District',
                'verbose_name_plural': 'Districts',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Province',
                'verbose_name_plural': 'Provinces',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='province_sector', to='accounts.district')),
            ],
            options={
                'verbose_name': 'Sector',
                'verbose_name_plural': 'Sectors',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Village',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('sector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='village', to='accounts.sector')),
            ],
            options={
                'verbose_name': 'Village',
                'verbose_name_plural': 'Villages',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='UserAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_address', to=settings.AUTH_USER_MODEL)),
                ('village', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_village', to='accounts.village')),
            ],
            options={
                'verbose_name': 'User Address',
                'verbose_name_plural': 'User addresses',
                'ordering': ('village',),
            },
        ),
        migrations.AddField(
            model_name='district',
            name='province',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='province', to='accounts.province'),
        ),
        migrations.CreateModel(
            name='ClinicWorker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clinic', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='clinic', to=settings.AUTH_USER_MODEL)),
                ('members', models.ManyToManyField(related_name='members', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Clinic Worker',
                'verbose_name_plural': 'Clinic Workers',
                'ordering': ('clinic',),
            },
        ),
        migrations.CreateModel(
            name='ClinicAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clinic', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='clinic_address', to=settings.AUTH_USER_MODEL)),
                ('sector', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='clinic_sector', to='accounts.sector')),
            ],
            options={
                'verbose_name': 'Clinic address',
                'verbose_name_plural': 'Clinics address',
                'ordering': ('sector',),
            },
        ),
    ]
